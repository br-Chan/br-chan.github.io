/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TodoIndexImport } from './routes/todo/index'
import { Route as CvIndexImport } from './routes/cv/index'
import { Route as homeIndexImport } from './routes/(home)/index'

// Create/Update Routes

const TodoIndexRoute = TodoIndexImport.update({
  id: '/todo/',
  path: '/todo/',
  getParentRoute: () => rootRoute,
} as any)

const CvIndexRoute = CvIndexImport.update({
  id: '/cv/',
  path: '/cv/',
  getParentRoute: () => rootRoute,
} as any)

const homeIndexRoute = homeIndexImport.update({
  id: '/(home)/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(home)/': {
      id: '/(home)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeIndexImport
      parentRoute: typeof rootRoute
    }
    '/cv/': {
      id: '/cv/'
      path: '/cv'
      fullPath: '/cv'
      preLoaderRoute: typeof CvIndexImport
      parentRoute: typeof rootRoute
    }
    '/todo/': {
      id: '/todo/'
      path: '/todo'
      fullPath: '/todo'
      preLoaderRoute: typeof TodoIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof homeIndexRoute
  '/cv': typeof CvIndexRoute
  '/todo': typeof TodoIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof homeIndexRoute
  '/cv': typeof CvIndexRoute
  '/todo': typeof TodoIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(home)/': typeof homeIndexRoute
  '/cv/': typeof CvIndexRoute
  '/todo/': typeof TodoIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/cv' | '/todo'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cv' | '/todo'
  id: '__root__' | '/(home)/' | '/cv/' | '/todo/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  homeIndexRoute: typeof homeIndexRoute
  CvIndexRoute: typeof CvIndexRoute
  TodoIndexRoute: typeof TodoIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  homeIndexRoute: homeIndexRoute,
  CvIndexRoute: CvIndexRoute,
  TodoIndexRoute: TodoIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(home)/",
        "/cv/",
        "/todo/"
      ]
    },
    "/(home)/": {
      "filePath": "(home)/index.tsx"
    },
    "/cv/": {
      "filePath": "cv/index.tsx"
    },
    "/todo/": {
      "filePath": "todo/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
